[{"name":"app.R","content":"# One rep max shiny app -------------------------------------------------------\r\n#\r\n# - A shiny app to find your one rep max\r\n# - and create warm up sets to attempt it\r\n# \r\n# -----------------------------------------------------------------------------\r\n\r\n# Source libs -----------------------------------------------------------------\r\n\r\n# source(here::here(\"scripts\", \"00_libs.R\"))\r\n\r\n# -----------------------------------------------------------------------------\r\nui <- fluidPage(\r\n  titlePanel(\"Warm-up Set Generator for One Rep Max\"),\r\n  fluidRow(\r\n    column(12,\r\n            wellPanel(\r\n              p(\"This app allows you to input weights and reps completed\r\n                to determine what your one rep max may be.\",\r\n                br(),\r\n                \"It automatically generates a warm up set for you based \r\n                on your predicted one rep max.\")\r\n            ))\r\n  ),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      HTML(\"Enter the weight and number of reps for however many sets\r\n           you have recorded. The weight can be in any unit as long as\r\n           you are consistent.\"),\r\n      numericInput(\"wt\", \"Weight\",\r\n                   value = 0,\r\n                   min = 0),\r\n      numericInput(\"reps\", \"Number of reps completed\",\r\n                   value = 1,\r\n                   min = 1),\r\n      actionButton(\"addSet\", \"Add Set\"),\r\n      actionButton(\"clearSets\", \"Clear Sets\"),\r\n      hr(),\r\n      tableOutput(\"inputTable\")\r\n      ),\r\n    mainPanel(\r\n      tableOutput(\"warmUpTable\")\r\n    )\r\n  )\r\n)\r\n\r\n\r\nserver <- function(input, output, session) {\r\n  sets <- reactiveValues(data = data.frame(\r\n    Weight = numeric(0), \r\n    Reps = integer(0)\r\n  ))\r\n  \r\n  observeEvent(input$addSet, {\r\n    new_set <- data.frame(\r\n      Weight = input$wt,\r\n      Reps = input$reps\r\n    )\r\n    sets$data <- rbind(sets$data, new_set)\r\n  })\r\n  \r\n  observeEvent(input$clearSets, {\r\n    sets$data <- data.frame(Weight = numeric(0), Reps = integer(0))\r\n  })\r\n  \r\n  output$inputTable <- renderTable({\r\n    sets$data\r\n  }, rownames = FALSE)\r\n  \r\n  predicted_max <- reactive({\r\n    if (nrow(sets$data) == 0) return(0)\r\n    predicted_max_values <- (sets$data$Reps * sets$data$Weight * 0.0333) + sets$data$Weight\r\n    mean(predicted_max_values)\r\n  })\r\n  \r\n  warm_up_sets <- reactive({\r\n    if (predicted_max() == 0) return(NULL)\r\n    data.frame(\r\n      Set = as.factor(seq(1, 5, length.out = 5)),\r\n      Weight = c(0.5 * predicted_max(), \r\n                 0.6 * predicted_max(),\r\n                 0.75 * predicted_max(),\r\n                 0.85 * predicted_max(),\r\n                 predicted_max()),\r\n      Reps = factor(c(10, 5, 3, 2, 1))\r\n    )\r\n  })\r\n  \r\n  output$warmUpTable <- renderTable({\r\n    warm_up_sets()\r\n  }, rownames = FALSE)\r\n}\r\n\r\nshinyApp(ui, server)","type":"text"}]
